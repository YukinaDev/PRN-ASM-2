@page "{id:int}"
@model EVDMS.WebApp.Pages.DistributionPlans.DetailsModel
@{
    ViewData["Title"] = "Chi tiết kế hoạch phân phối";
    var createdAtText = Model.Plan?.CreatedAt.ToLocalTime().ToString("dd/MM/yyyy HH:mm");
    var approvedAtText = Model.Plan?.ApprovedAt?.ToLocalTime().ToString("dd/MM/yyyy HH:mm");
}

@if (Model.Plan is null)
{
    <div class="alert alert-danger">Không tìm thấy kế hoạch phân phối.</div>
    return;
}

<div class="page-header mb-4">
    <div>
        <h1 class="page-title">@Model.Plan.PlanName</h1>
        <p class="page-subtitle">Tháng triển khai: @Model.Plan.TargetMonth.ToString("MMMM yyyy")</p>
    </div>
    <a asp-page="Index" class="btn btn-outline-secondary">
        <i class="bi bi-arrow-left-circle me-1"></i> Quay lại danh sách
    </a>
</div>

@if (!string.IsNullOrWhiteSpace(Model.StatusMessage))
{
    <div class="alert alert-success alert-dismissible fade show shadow-sm" role="alert">
        @Model.StatusMessage
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Đóng"></button>
    </div>
}

<div class="row g-4 mb-4">
    <div class="col-md-8">
        <div class="card shadow-sm border-0 h-100">
            <div class="card-body">
                <div class="d-flex flex-wrap align-items-center justify-content-between mb-3">
                    <span class="badge fs-6 @GetStatusBadge(Model.Plan.Status)">@Model.Plan.Status</span>
                    <div class="text-muted small">
                        Tạo bởi <strong>@Model.Plan.CreatedBy</strong> · @createdAtText
                    </div>
                </div>
                @if (!string.IsNullOrWhiteSpace(Model.Plan.Description))
                {
                    <p class="mb-3">@Model.Plan.Description</p>
                }

                <dl class="row mb-0">
                    <dt class="col-sm-4">Trạng thái phê duyệt</dt>
                    <dd class="col-sm-8">
                        @if (!string.IsNullOrWhiteSpace(Model.Plan.ApprovedBy))
                        {
                            <strong>@Model.Plan.ApprovedBy</strong>
                            @if (!string.IsNullOrEmpty(approvedAtText))
                            {
                                <span>(@approvedAtText)</span>
                            }
                        }
                        else
                        {
                            <span class="text-muted">Chưa phê duyệt</span>
                        }
                    </dd>

                    @if (!string.IsNullOrWhiteSpace(Model.Plan.RejectionReason))
                    {
                        <dt class="col-sm-4">Lý do từ chối</dt>
                        <dd class="col-sm-8 text-danger">@Model.Plan.RejectionReason</dd>
                    }
                </dl>
            </div>
        </div>
    </div>
    <div class="col-md-4">
        <div class="card shadow-sm border-0 h-100">
            <div class="card-body">
                <h2 class="h6 text-uppercase text-muted mb-3">Hành động</h2>
                <div class="d-grid gap-2">
                    @if (Model.CanSubmit)
                    {
                        <form method="post" asp-page-handler="Submit">
                            <button type="submit" class="btn btn-primary">
                                <i class="bi bi-send-check me-1"></i> Gửi phê duyệt
                            </button>
                        </form>
                    }
                    @if (Model.CanApprove)
                    {
                        <form method="post" asp-page-handler="Approve">
                            <div class="mb-2">
                                <label class="form-label">Ghi chú phê duyệt / Lý do từ chối</label>
                                <textarea class="form-control" asp-for="ApprovalComment" rows="3"></textarea>
                                <span asp-validation-for="ApprovalComment" class="text-danger"></span>
                            </div>
                            <div class="d-flex gap-2">
                                <button name="approve" value="true" type="submit" class="btn btn-success flex-fill">
                                    <i class="bi bi-check2-circle me-1"></i> Phê duyệt
                                </button>
                                <button name="approve" value="false" type="submit" class="btn btn-outline-danger flex-fill">
                                    <i class="bi bi-x-circle me-1"></i> Từ chối
                                </button>
                            </div>
                        </form>
                    }
                    @if (!Model.CanSubmit && !Model.CanApprove)
                    {
                        <span class="text-muted small">Không có hành động khả dụng cho vai trò của bạn.</span>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<div class="card shadow-sm border-0">
    <div class="card-body">
        <h2 class="h5 mb-3">Chi tiết phân bổ</h2>
        <div class="table-responsive">
            <table class="table table-striped align-middle">
                <thead>
                    <tr>
                        <th>Đại lý</th>
                        <th>Mẫu xe</th>
                        <th class="text-end">Số lượng</th>
                        <th class="text-end">Chiết khấu (%)</th>
                        <th>Ghi chú</th>
                    </tr>
                </thead>
                <tbody>
                @foreach (var line in Model.Plan.Lines)
                {
                    <tr>
                        <td>@line.DealerName</td>
                        <td>@line.VehicleName</td>
                        <td class="text-end">@line.PlannedQuantity</td>
                        <td class="text-end">@line.DiscountRate</td>
                        <td>@line.Notes</td>
                    </tr>
                }
                </tbody>
            </table>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}

@functions {
    private static string GetStatusBadge(PlanStatus status) => status switch
    {
        PlanStatus.Draft => "badge rounded-pill bg-secondary-subtle text-secondary-emphasis px-3 py-2",
        PlanStatus.Submitted => "badge rounded-pill bg-warning-subtle text-warning-emphasis px-3 py-2",
        PlanStatus.Approved => "badge rounded-pill bg-success-subtle text-success-emphasis px-3 py-2",
        PlanStatus.Rejected => "badge rounded-pill bg-danger-subtle text-danger-emphasis px-3 py-2",
        _ => "badge rounded-pill bg-light text-dark"
    };
}
